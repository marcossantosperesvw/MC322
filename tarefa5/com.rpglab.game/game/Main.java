package com.rpglab.game;

import com.rpglab.cenario.*;
import com.rpglab.personagens.herois.*;
import com.rpglab.itens.*;
import com.rpglab.util.*;
import java.util.*;

public class Main {
    
    public static void main(String[] args) {
        exibirIntroducao();
        
        try {
            // Usar interfaces conforme especifica√ß√£o
            GeradorDeFases gerador = new ConstrutorDeCenarioFixo();
            GerenciadorDeInteracao manager = new GerenciadorDeInteracao();
            
            // Menu principal com sele√ß√£o
            manager.menuInicial();
            
            // Narrativa de in√≠cio
            exibirNarrativaInicio();
            
            // Sele√ß√£o de dificuldade
            Dificuldade dificuldade = manager.selecionarDificuldade();
            List<Fase> fases = gerador.gerar(3, dificuldade);
            
            // Cria√ß√£o dos her√≥is
            Arma marteloIniciante = new Martelo("Martelo do Iniciante", 15, 0);
            Arma linguaIniciante = new Lingua("L√≠ngua do Iniciante", 13, 0);
            
            Heroi[] arrayHerois = {
                new Yoshi("Yoshi", 200, 40, linguaIniciante), 
                new Mario("Mario", 200, 50, marteloIniciante)
            };
            
            // Sele√ß√£o do her√≥i
            Heroi heroi = manager.selecaoHeroi(arrayHerois);
            
            // Narrativa p√≥s-sele√ß√£o
            exibirNarrativaPosSelecao(heroi);
            heroi.exibirStatus();
            
            InputManager.esperarEnter("\nPressione ENTER para come√ßar a aventura...");
            
            // Loop principal das fases
            for (int i = 0; i < fases.size(); i++) {
                exibirInicioFase(i + 1, fases.size());
                
                // Iniciar a fase
                fases.get(i).iniciar(heroi);
                
                // Verificar se foi conclu√≠da
                if (!fases.get(i).isConcluida()) {
                    exibirGameOver(heroi);
                    return;
                }
                
                // Narrativa p√≥s-fase
                exibirSucessoFase(i + 1);
                
                // Mostrar status ap√≥s a fase
                System.out.println("\n=== STATUS AP√ìS A FASE ===");
                heroi.exibirStatus();
                
                // Menu p√≥s-fase (exceto na √∫ltima)
                if (i < fases.size() - 1) {
                    InputManager.esperarEnter("Pressione ENTER para continuar...");
                    manager.statusPosTurno(heroi, fases.get(i + 1).getMonstros().get(0).getArma());
                }
            }
            
            // Verificar vit√≥ria final
            if (heroi.estaVivo() && todasFasesConcluidas(fases)) {
                exibirVitoriaFinal(heroi);
            }
            
        } catch (Exception e) {
            System.err.println("\nüíÄ ERRO CR√çTICO: O tecido da realidade se rompeu!");
            System.err.println("Detalhes do erro: " + e.getMessage());
            System.err.println("A aventura foi interrompida por for√ßas misteriosas...");
        } finally {
            InputManager.fecharScanner();
        }
    }
    
    private static void exibirIntroducao() {
        System.out.println("======================================================================");
        System.out.println("                    üè∞ TERRAS SOMBRIAS - RPG üè∞");
        System.out.println("                  Aventuras de Mario e Yoshi");
        System.out.println("======================================================================");
        System.out.println();
    }
    
    private static void exibirNarrativaInicio() {
        System.out.println("\n" + "=".repeat(70));
        System.out.println("                        üìñ A LENDA COME√áA üìñ");
        System.out.println("=".repeat(70));
        System.out.println();
        System.out.println("H√° muito tempo, nas terras distantes do Reino Cogumelo, uma sombra");
        System.out.println("maligna come√ßou a se espalhar. O terr√≠vel Bowser, Rei dos Koopas,");
        System.out.println("reuniu seus servos mais leais e tomou o controle de tr√™s fortalezas");
        System.out.println("m√≠sticas que protegem o equil√≠brio do mundo.");
        System.out.println();
        System.out.println("A Princesa Peach enviou um chamado desesperado aos maiores her√≥is");
        System.out.println("do reino. Apenas Mario, o lend√°rio encanador, e Yoshi, o corajoso");
        System.out.println("dinossauro, responderam ao chamado.");
        System.out.println();
        System.out.println("A jornada ser√° perigosa... Apenas um her√≥i poder√° enfrentar esta");
        System.out.println("amea√ßa e restaurar a paz ao Reino Cogumelo!");
        System.out.println();
        System.out.println("=".repeat(70));
    }
    
    private static void exibirNarrativaPosSelecao(Heroi heroi) {
        System.out.println("\n" + "=".repeat(70));
        System.out.println("                      ‚öîÔ∏è O HER√ìI ESCOLHIDO ‚öîÔ∏è");
        System.out.println("=".repeat(70));
        System.out.println();
        
        if (heroi.getNome().equals("Mario")) {
            System.out.println("Mario ajusta seu chap√©u vermelho e empunha seu fiel martelo.");
            System.out.println("'Mama mia! √â hora de salvar o reino mais uma vez!'");
            System.out.println();
            System.out.println("Com seus anos de experi√™ncia salvando a Princesa Peach,");
            System.out.println("Mario est√° pronto para enfrentar qualquer desafio!");
        } else {
            System.out.println("Yoshi bate suas asas e prepara sua l√≠ngua extens√≠vel.");
            System.out.println("'Yoshi! Vamos mostrar a esses vil√µes do que somos capazes!'");
            System.out.println();
            System.out.println("√Ågil e corajoso, Yoshi est√° determinado a proteger");
            System.out.println("seus amigos e restaurar a paz ao reino!");
        }
        
        System.out.println();
        System.out.println("=== STATUS INICIAL DO HER√ìI ===");
    }
    
    private static void exibirInicioFase(int faseAtual, int totalFases) {
        System.out.println("\n" + "=".repeat(70));
        System.out.printf("                    ‚ö° FASE %d DE %d ‚ö°\n", faseAtual, totalFases);
        System.out.println("=".repeat(70));
        
        switch (faseAtual) {
            case 1:
                System.out.println();
                System.out.println("üåô Nosso her√≥i se aproxima do primeiro desafio...");
                System.out.println("Os corredores sombrios ecoam com sussurros fantasmag√≥ricos.");
                System.out.println("√â hora de provar sua coragem contra os servos de Bowser!");
                break;
            case 2:
                System.out.println();
                System.out.println("üîÆ A jornada continua pela C√¢mara das Ilus√µes...");
                System.out.println("A realidade se distorce ao redor do her√≥i.");
                System.out.println("Inimigos mais poderosos aguardam nas sombras!");
                break;
            case 3:
                System.out.println();
                System.out.println("üî• Finalmente, o Castelo de Bowser se ergue √† frente!");
                System.out.println("Esta √© a batalha final que decidir√° o destino do reino.");
                System.out.println("O Rei dos Koopas aguarda... Que a batalha √©pica comece!");
                break;
        }
        System.out.println();
    }
    
    private static void exibirSucessoFase(int fase) {
        System.out.println("\n" + "üéâ".repeat(20));
        System.out.printf("          FASE %d CONCLU√çDA COM SUCESSO!\n", fase);
        System.out.println("üéâ".repeat(20));
        System.out.println();
        
        switch (fase) {
            case 1:
                System.out.println("Os fantasmas recuam para as sombras!");
                System.out.println("O primeiro dos tr√™s selos foi quebrado.");
                break;
            case 2:
                System.out.println("As ilus√µes se desfazem diante da determina√ß√£o do her√≥i!");
                System.out.println("O segundo selo foi destru√≠do.");
                break;
            case 3:
                System.out.println("Bowser foi derrotado e seu poder sombrio se dissipa!");
                System.out.println("O √∫ltimo selo foi quebrado!");
                break;
        }
    }
    
    private static void exibirGameOver(Heroi heroi) {
        System.out.println("\n" + "üíÄ".repeat(25));
        System.out.println("                    GAME OVER");
        System.out.println("üíÄ".repeat(25));
        System.out.println();
        System.out.println("As for√ßas das trevas prevaleceram...");
        System.out.println("O her√≥i lutou bravamente, mas n√£o foi suficiente.");
        System.out.println("O Reino Cogumelo permanecer√° nas sombras...");
        System.out.println();
        System.out.println("=== STATUS FINAL ===");
        heroi.exibirStatus();
        System.out.println("\nüîÑ Tente novamente para mudar o destino do reino!");
    }
    
    private static boolean todasFasesConcluidas(List<Fase> fases) {
        return fases.stream().allMatch(Fase::isConcluida);
    }
    
    private static void exibirVitoriaFinal(Heroi heroi) {
        System.out.println("\n" + "üèÜ".repeat(25));
        System.out.println("                     VIT√ìRIA √âPICA!");
        System.out.println("üèÜ".repeat(25));
        System.out.println();
        System.out.println("üéä PARAB√âNS! Voc√™ completou todas as fases! üéä");
        System.out.println();
        System.out.println("Com coragem e determina√ß√£o, nosso her√≥i conseguiu derrotar");
        System.out.println("todos os servos de Bowser e quebrar os tr√™s selos sombrios!");
        System.out.println();
        System.out.println("A luz voltou a brilhar sobre o Reino Cogumelo!");
        System.out.println("A Princesa Peach e todos os habitantes est√£o salvos!");
        System.out.println();
        System.out.println("üåü O reino est√° salvo gra√ßas √† sua bravura! üåü");
        System.out.println();
        System.out.println("=== STATUS FINAL DO HER√ìI VITORIOSO ===");
        heroi.exibirStatus();
        System.out.println();
        System.out.println("üéÆ Obrigado por jogar Terras Sombrias - RPG! üéÆ");
        System.out.println("‚ú® Que esta vit√≥ria seja lembrada para sempre! ‚ú®");
        System.out.println();
        System.out.println("=".repeat(70));
    }
}